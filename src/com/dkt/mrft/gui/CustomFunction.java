/*
 * MIT License
 *
 * Copyright (c) 2016 Federico Vera <https://github.com/dktcoding>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package com.dkt.mrft.gui;

import com.dkt.mrft.funcs.FunctionsRandom;
import com.dkt.mrft.utils.BundleDecorator;
import java.awt.event.ActionEvent;
import java.util.HashMap;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import net.objecthunter.exp4j.Expression;
import net.objecthunter.exp4j.ExpressionBuilder;
import net.objecthunter.exp4j.ValidationResult;
import net.objecthunter.exp4j.extras.FunctionsBoolean;
import net.objecthunter.exp4j.extras.FunctionsMisc;
import net.objecthunter.exp4j.extras.OperatorsComparison;

/**
 *
 * @author Federico Vera {@literal <fedevera at unc.edu.ar>}
 */
public final class CustomFunction extends javax.swing.JDialog {
    private static final BundleDecorator i18n = new BundleDecorator("res.i18n.dialogs");
    
    private final MainWindow father;
    /**
     * Creates new form CustomFunction
     * @param father
     */
    public CustomFunction(MainWindow father) {
        super((JFrame)null, true);
        this.father = father;
        initComponents();
        initListners();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("res/i18n/dialogs"); // NOI18N
        setTitle(bundle.getString("F_CUSTOM_TITLE")); // NOI18N

        jLabel1.setText(bundle.getString("F_CUSTOM_FOR_X")); // NOI18N

        jLabel2.setText(bundle.getString("F_CUSTOM_FOR_FX")); // NOI18N

        jLabel3.setText(bundle.getString("F_CUSTOM_VARS")); // NOI18N

        jButton3.setText(bundle.getString("F_CUSTOM_APPLY")); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText(bundle.getString("F_CUSTOM_CLOSE")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/a_ok.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/icons/a_ok.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(5, 5, 5)
                        .addComponent(jTextField2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean noOutput;
    private void jButton4ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        noOutput = true;
        setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        noOutput = false;
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private final ImageIcon warn = new ImageIcon(getClass().getResource("/res/icons/warn.png"));
    private final ImageIcon a_ok = new ImageIcon(getClass().getResource("/res/icons/a_ok.png"));
    private void initListners() {
        DocumentListener dl1 = new DocumentListener() {
            @Override public void insertUpdate(DocumentEvent e) {
                jButton3.setEnabled(validateFunc(jTextField1, jLabel4) 
                                 && jLabel4.getIcon() == a_ok
                                 && jLabel5.getIcon() == a_ok);
            }

            @Override public void removeUpdate(DocumentEvent e) {
                jButton3.setEnabled(validateFunc(jTextField1, jLabel4) 
                                 && jLabel4.getIcon() == a_ok
                                 && jLabel5.getIcon() == a_ok);
            }

            @Override public void changedUpdate(DocumentEvent e) {
                jButton3.setEnabled(validateFunc(jTextField1, jLabel4) 
                                 && jLabel4.getIcon() == a_ok
                                 && jLabel5.getIcon() == a_ok);
            }
        };
        
        DocumentListener dl2 = new DocumentListener() {
            @Override public void insertUpdate(DocumentEvent e) {
                jButton3.setEnabled(validateFunc(jTextField2, jLabel5) 
                                 && jLabel4.getIcon() == a_ok
                                 && jLabel5.getIcon() == a_ok);
            }

            @Override public void removeUpdate(DocumentEvent e) {
                jButton3.setEnabled(validateFunc(jTextField2, jLabel5) 
                                 && jLabel4.getIcon() == a_ok
                                 && jLabel5.getIcon() == a_ok);
            }

            @Override public void changedUpdate(DocumentEvent e) {
                jButton3.setEnabled(validateFunc(jTextField2, jLabel5) 
                                 && jLabel4.getIcon() == a_ok
                                 && jLabel5.getIcon() == a_ok);
            }
        };
        
        jTextField1.getDocument().addDocumentListener(dl1);
        jTextField2.getDocument().addDocumentListener(dl2);
        
        jTextField1.setText("x");
        jTextField2.setText("fx");
    }
    
    private boolean validateFunc(JTextField tField, JLabel label) {
        String expString = tField.getText();
        if (expString.trim().isEmpty()) {
            label.setIcon(warn);
            return false;
        }
        try {
            ExpressionBuilder exp = new ExpressionBuilder(expString);
            HashMap<String, Double> map = new HashMap<>(2);
            if (expString.replace("fx", "").contains("x" )) map.put("x", 1d);
            if (expString.contains("fx"))map.put("fx", 1d);
            exp.variables(map.keySet());
            exp.functions(FunctionsMisc.getFunctions());
            exp.functions(FunctionsBoolean.getFunctions());
            exp.functions(FunctionsRandom.getFunctions());
            exp.operator (OperatorsComparison.getOperators());
            Expression e = exp.build().setVariables(map);
            ValidationResult vr = e.validate();
            if (vr.isValid()) {
                label.setIcon(a_ok);
                label.setToolTipText("");
            } else {
                label.setToolTipText(i18n.__("F_CUSTOM_CHECK_EXP"));
                label.setIcon(warn);
                return false;
            }
        } catch (Exception ex) {
            label.setToolTipText(ex.getMessage());
            label.setIcon(warn);
            return false;
        }
        return true;
    }
    
    public String getExp4XStr() {
        if (noOutput) return null;
        return jTextField1.getText();
    }
    
    public String getExp4FXStr() {
        if (noOutput) return null;
        return jTextField2.getText();
    }
    
    public Expression getExp4X() {
        if (noOutput) return null;
        
        String expString = jTextField1.getText();
        ExpressionBuilder exp = new ExpressionBuilder(expString);
        if (expString.replace("fx", "").contains("x" ))exp.variable("x" );
        if (expString.contains("fx"))exp.variable("fx");
        exp.functions(FunctionsMisc.getFunctions());
        exp.functions(FunctionsBoolean.getFunctions());
        exp.functions(FunctionsRandom.getFunctions());
        exp.operator (OperatorsComparison.getOperators());
        
        return exp.build(true);
    }
    
    public Expression getExp4FX() {
        if (noOutput) return null;
        
        String expString = jTextField2.getText();
        ExpressionBuilder exp = new ExpressionBuilder(expString);
        if (expString.replace("fx", "").contains("x" ))exp.variable("x" );
        if (expString.contains("fx"))exp.variable("fx");
        exp.functions(FunctionsMisc.getFunctions());
        exp.functions(FunctionsBoolean.getFunctions());
        exp.functions(FunctionsRandom.getFunctions());
        exp.operator (OperatorsComparison.getOperators());
        
        return exp.build(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
