/*
 * MIT License
 *
 * Copyright (c) 2016 Federico Vera <https://github.com/dktcoding>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package com.dkt.mrft.examples;

import com.dkt.mrft.gui.MainWindow;
import com.dkt.mrft.models.DatasetTableModel;
import java.io.File;
import libai.nn.supervised.MLP;

/**
 *
 * @author Federico Vera {@literal <fedevera at unc.edu.ar>}
 */
public class ExampleEKG extends Example {

    @Override
    public String getName() {
        return "EKG(x)";
    }

    @Override
    public int maxEpochs() {
        return 250000;
    }

    @Override
    public int saveEvery() {
        return 25;
    }

    @Override
    public double mse() {
        return 0.00001;
    }

    @Override
    public double learnRate() {
        return 0.001;
    }

    @Override
    public double degradation() {
        return 1;
    }

    @Override
    public int backpropagation() {
        return MLP.RESILENT_BACKPROPAGATION;
    }

    @Override
    public String[] topology() {
        return new String[]{"Identity1)",  "Gaussian(32)", "Gaussian(32)", "Identity(1)"};
    }

    @Override
    public void loadTrainData(DatasetTableModel data) {
        data.addRow(-1.000000000000000,-0.194002931301622);
        data.addRow(-0.993378283640542,-0.193993914891883);
        data.addRow(-0.986756567281084,-0.193940856748809);
        data.addRow(-0.980134850921626,-0.193798029506279);
        data.addRow(-0.973513134562168,-0.193519705798173);
        data.addRow(-0.966891418202710,-0.193060158258371);
        data.addRow(-0.960269701843252,-0.182535094014842);
        data.addRow(-0.953647985483793,-0.182650185872634);
        data.addRow(-0.947026269124335,-0.183092993744057);
        data.addRow(-0.940404552764877,-0.183603612223728);
        data.addRow(-0.933782836405419,-0.183922135906263);
        data.addRow(-0.927161120045961,-0.180413085103516);
        data.addRow(-0.920539403686503,-0.180159043178710);
        data.addRow(-0.913917687327044,-0.180265379875100);
        data.addRow(-0.907295970967586,-0.180603204110025);
        data.addRow(-0.900674254608128,-0.181043624800829);
        data.addRow(-0.894052538248670,-0.181457750864853);
        data.addRow(-0.887430821889212,-0.182731098564376);
        data.addRow(-0.880809105529754,-0.182710485806064);
        data.addRow(-0.874187389170296,-0.182628971233393);
        data.addRow(-0.867565672810837,-0.182444451150798);
        data.addRow(-0.860943956451379,-0.182114821862717);
        data.addRow(-0.854322240091921,-0.181333278292860);
        data.addRow(-0.847700523732463,-0.186367389269946);
        data.addRow(-0.841078807373005,-0.188630855436999);
        data.addRow(-0.834457091013547,-0.189830433526732);
        data.addRow(-0.827835374654088,-0.190496639109988);
        data.addRow(-0.821213658294630,-0.191159987757606);
        data.addRow(-0.814591941935172,-0.186266463073443);
        data.addRow(-0.807970225575714,-0.184395078831101);
        data.addRow(-0.801348509216256,-0.183376056841913);
        data.addRow(-0.794726792856797,-0.182840509480644);
        data.addRow(-0.788105076497339,-0.182419549122057);
        data.addRow(-0.781483360137881,-0.181744288140914);
        data.addRow(-0.774861643778423,-0.174983103841798);
        data.addRow(-0.768239927418965,-0.175394982652743);
        data.addRow(-0.761618211059507,-0.175876946793795);
        data.addRow(-0.754996494700049,-0.176227616047957);
        data.addRow(-0.748374778340591,-0.176245610198231);
        data.addRow(-0.741753061981132,-0.162442689882308);
        data.addRow(-0.735131345621674,-0.162442689882308);
        data.addRow(-0.728509629262216,-0.162442689882308);
        data.addRow(-0.721887912902758,-0.162442689882308);
        data.addRow(-0.715266196543300,-0.162442689882308);
        data.addRow(-0.708644480183841,-0.162442689882308);
        data.addRow(-0.702022763824383,-0.164149024971593);
        data.addRow(-0.695401047464925,-0.161940927627144);
        data.addRow(-0.688779331105467,-0.160767402726682);
        data.addRow(-0.682157614746009,-0.159611444933383);
        data.addRow(-0.675535898386551,-0.157456048910421);
        data.addRow(-0.668914182027092,-0.152299313652242);
        data.addRow(-0.662292465667634,-0.152340138555848);
        data.addRow(-0.655670749308176,-0.152571792368378);
        data.addRow(-0.649049032948718,-0.15316256969027);
        data.addRow(-0.642427316589260,-0.154280765121961);
        data.addRow(-0.635805600229802,-0.156094673263889);
        data.addRow(-0.629183883870343,-0.154618654409139);
        data.addRow(-0.622562167510885,-0.153377044945116);
        data.addRow(-0.615940451151427,-0.152588862772942);
        data.addRow(-0.609318734791969,-0.152194813487250);
        data.addRow(-0.602697018432511,-0.152135602682672);
        data.addRow(-0.596075302073053,-0.161446521654205);
        data.addRow(-0.589453585713595,-0.162377223521716);
        data.addRow(-0.582831869354136,-0.162937837147882);
        data.addRow(-0.576210152994678,-0.163238897039391);
        data.addRow(-0.569588436635220,-0.163390937702928);
        data.addRow(-0.562966720275762,-0.163504493645181);
        data.addRow(-0.556345003916304,-0.170317767138856);
        data.addRow(-0.549723287556845,-0.172114394392936);
        data.addRow(-0.543101571197387,-0.173365986648758);
        data.addRow(-0.536479854837929,-0.174059333530668);
        data.addRow(-0.529858138478471,-0.174181224663011);
        data.addRow(-0.523236422119013,-0.173718449670133);
        data.addRow(-0.516614705759555,-0.170332750237136);
        data.addRow(-0.509992989400097,-0.170332750237137);
        data.addRow(-0.503371273040638,-0.170332750237137);
        data.addRow(-0.496749556681180,-0.170332750237137);
        data.addRow(-0.490127840321722,-0.170332750237136);
        data.addRow(-0.483506123962264,-0.164090707096079);
        data.addRow(-0.476884407602806,-0.162912710562168);
        data.addRow(-0.470262691243348,-0.162250000493043);
        data.addRow(-0.463640974883890,-0.161905613237324);
        data.addRow(-0.457019258524431,-0.161682585143627);
        data.addRow(-0.450397542164973,-0.161383952560569);
        data.addRow(-0.443775825805515,-0.162006614866737);
        data.addRow(-0.437154109446057,-0.162042830201283);
        data.addRow(-0.430532393086599,-0.161383991372555);
        data.addRow(-0.423910676727141,-0.160264947433462);
        data.addRow(-0.417288960367683,-0.158920547436915);
        data.addRow(-0.410667244008225,-0.151911056822319);
        data.addRow(-0.404045527648767,-0.150180406605615);
        data.addRow(-0.397423811289308,-0.149073724219066);
        data.addRow(-0.390802094929850,-0.148424919161801);
        data.addRow(-0.384180378570392,-0.148067900932948);
        data.addRow(-0.377558662210934,-0.147836579031637);
        data.addRow(-0.370936945851476,-0.166615059579239);
        data.addRow(-0.364315229492018,-0.170084440104198);
        data.addRow(-0.357693513132560,-0.172605377545801);
        data.addRow(-0.351071796773102,-0.173936079882985);
        data.addRow(-0.344450080413644,-0.173834755094685);
        data.addRow(-0.337828364054185,-0.104391307783232);
        data.addRow(-0.331206647694727,-0.0754125728160654);
        data.addRow(-0.324584931335269,-0.0602688972440978);
        data.addRow(-0.317963214975811,-0.0520519244964268);
        data.addRow(-0.311341498616353,-0.0438532980021502);
        data.addRow(-0.304719782256895,-0.0287646611903658);
        data.addRow(-0.298098065897437,0.202108628611231);
        data.addRow(-0.291476349537979,0.231342221443616);
        data.addRow(-0.284854633178521,0.249234948918417);
        data.addRow(-0.278232916819063,0.258434158180246);
        data.addRow(-0.271611200459604,0.261587196373716);
        data.addRow(-0.264989484100146,0.258986400712250);
        data.addRow(-0.258367767740688,0.0242645127019661);
        data.addRow(-0.251746051381230,-0.0262363829227416);
        data.addRow(-0.245124335021772,-0.0522725474874335);
        data.addRow(-0.238502618662314,-0.0690078880225692);
        data.addRow(-0.231880902302856,-0.0916063115586084);
        data.addRow(-0.225259185943398,-0.261587196373716);
        data.addRow(-0.21863746958394,-0.260456478971488);
        data.addRow(-0.212015753224481,-0.255926010330141);
        data.addRow(-0.205394036865023,-0.245571482694868);
        data.addRow(-0.198772320505565,-0.226968588310861);
        data.addRow(-0.192150604146107,-0.197693019423312);
        data.addRow(-0.185528887786649,-0.142585643818866);
        data.addRow(-0.178907171427191,-0.143222710877431);
        data.addRow(-0.172285455067733,-0.14463151668733);
        data.addRow(-0.165663738708275,-0.146082245995767);
        data.addRow(-0.159042022348817,-0.146845083549946);
        data.addRow(-0.152420305989358,-0.141610467822696);
        data.addRow(-0.1457985896299,-0.140181817542344);
        data.addRow(-0.139176873270442,-0.139097141530665);
        data.addRow(-0.132555156910984,-0.138431147699555);
        data.addRow(-0.125933440551526,-0.138258543960913);
        data.addRow(-0.119311724192068,-0.138654038226637);
        data.addRow(-0.11269000783261,-0.142965441253288);
        data.addRow(-0.106068291473152,-0.143818236769275);
        data.addRow(-0.0994465751136936,-0.144424969061312);
        data.addRow(-0.0928248587542354,-0.144734288983783);
        data.addRow(-0.0862031423947773,-0.144694847391075);
        data.addRow(-0.0795814260353192,-0.135161304757525);
        data.addRow(-0.0729597096758611,-0.134175485722884);
        data.addRow(-0.0663379933164029,-0.133462604192739);
        data.addRow(-0.0597162769569448,-0.133030696131015);
        data.addRow(-0.0530945605974867,-0.132887797501635);
        data.addRow(-0.0464728442380286,-0.133041944268523);
        data.addRow(-0.0398511278785704,-0.141209840568226);
        data.addRow(-0.0332294115191123,-0.143007929912315);
        data.addRow(-0.0266076951596542,-0.144423309027249);
        data.addRow(-0.0199859788001961,-0.145234859148325);
        data.addRow(-0.013364262440738,-0.145221461510841);
        data.addRow(-0.00674254608127984,-0.138602395639846);
        data.addRow(-0.000120829721821716,-0.137790053644032);
        data.addRow(0.00650088663763641,-0.138177695129398);
        data.addRow(0.0131226029970945,-0.139295763711524);
        data.addRow(0.0197443193565526,-0.140674703005989);
        data.addRow(0.0263660357160108,-0.141844956628373);
        data.addRow(0.0329877520754689,-0.148416497542131);
        data.addRow(0.039609468434927,-0.148784743011011);
        data.addRow(0.0462311847943851,-0.14812904767637);
        data.addRow(0.0528529011538433,-0.146646705045115);
        data.addRow(0.0594746175133014,-0.144535008624158);
        data.addRow(0.0660963338727595,-0.133840485029884);
        data.addRow(0.0727180502322176,-0.132881880710173);
        data.addRow(0.0793397665916757,-0.132918669684482);
        data.addRow(0.0859614829511339,-0.133173818230952);
        data.addRow(0.092583199310592,-0.133567847713541);
        data.addRow(0.0992049156700501,-0.134021279496208);
        data.addRow(0.105826632029508,-0.128212334794605);
        data.addRow(0.112448348388966,-0.124919147081571);
        data.addRow(0.119070064748424,-0.122522296173187);
        data.addRow(0.125691781107883,-0.121128378500497);
        data.addRow(0.132313497467341,-0.120843990494544);
        data.addRow(0.138935213826799,-0.121775728586373);
        data.addRow(0.145556930186257,-0.131077791690073);
        data.addRow(0.152178646545715,-0.130902488834601);
        data.addRow(0.158800362905173,-0.128957355621391);
        data.addRow(0.165422079264631,-0.125234668988953);
        data.addRow(0.172043795624089,-0.119726705875799);
        data.addRow(0.178665511983547,-0.101593145149834);
        data.addRow(0.185287228343006,-0.101608618560429);
        data.addRow(0.191908944702464,-0.101541791329303);
        data.addRow(0.198530661061922,-0.101364300296497);
        data.addRow(0.20515237742138,-0.101047782302056);
        data.addRow(0.211774093780838,-0.100563874186023);
        data.addRow(0.218395810140296,-0.07468664079456);
        data.addRow(0.225017526499754,-0.0730074157186021);
        data.addRow(0.231639242859212,-0.0721410174263342);
        data.addRow(0.23826095921867,-0.071603951515234);
        data.addRow(0.244882675578129,-0.0709127235827783);
        data.addRow(0.251504391937587,-0.0558945530833789);
        data.addRow(0.258126108297045,-0.0536067064075268);
        data.addRow(0.264747824656503,-0.0522079529424284);
        data.addRow(0.271369541015961,-0.0514559164176982);
        data.addRow(0.277991257375419,-0.0511082205629514);
        data.addRow(0.284612973734877,-0.0509224891078025);
        data.addRow(0.291234690094335,-0.0553640658093687);
        data.addRow(0.297856406453793,-0.0553640658093687);
        data.addRow(0.304478122813251,-0.0553640658093687);
        data.addRow(0.31109983917271,-0.0553640658093686);
        data.addRow(0.317721555532168,-0.0553640658093687);
        data.addRow(0.324343271891626,-0.0634313126589206);
        data.addRow(0.330964988251084,-0.0653100282769382);
        data.addRow(0.337586704610542,-0.0662544908505083);
        data.addRow(0.34420842097,-0.0668309716176132);
        data.addRow(0.350830137329458,-0.067605741816235);
        data.addRow(0.357451853688916,-0.0691450726843563);
        data.addRow(0.364073570048375,-0.0982209559451764);
        data.addRow(0.370695286407833,-0.100662671514235);
        data.addRow(0.377317002767291,-0.102040579784226);
        data.addRow(0.383938719126749,-0.103593950052409);
        data.addRow(0.390560435486207,-0.106562051616047);
        data.addRow(0.397182151845665,-0.142389706004335);
        data.addRow(0.403803868205123,-0.14904577178465);
        data.addRow(0.410425584564581,-0.152546691946894);
        data.addRow(0.417047300924039,-0.154508940009353);
        data.addRow(0.423669017283497,-0.156548989490311);
        data.addRow(0.430290733642956,-0.160283313908052);
        data.addRow(0.436912450002414,-0.194119182129183);
        data.addRow(0.443534166361872,-0.19751707882951);
        data.addRow(0.45015588272133,-0.199230008490963);
        data.addRow(0.456777599080788,-0.200216032779981);
        data.addRow(0.463399315440246,-0.201433213363004);
        data.addRow(0.470021031799704,-0.20383961190647);
        data.addRow(0.476642748159162,-0.231887493029749);
        data.addRow(0.48326446451862,-0.234063510723223);
        data.addRow(0.489886180878079,-0.235218972753644);
        data.addRow(0.496507897237537,-0.235828251316692);
        data.addRow(0.503129613596995,-0.236365718608049);
        data.addRow(0.509751329956453,-0.246264392349938);
        data.addRow(0.516373046315911,-0.247139544157484);
        data.addRow(0.522994762675369,-0.247681260136456);
        data.addRow(0.529616479034828,-0.247969513417294);
        data.addRow(0.536238195394286,-0.248084277130437);
        data.addRow(0.542859911753744,-0.248105524406323);
        data.addRow(0.549481628113202,-0.251877620034602);
        data.addRow(0.55610334447266,-0.25272567894071);
        data.addRow(0.562725060832118,-0.253637485090697);
        data.addRow(0.569346777191577,-0.254281834295666);
        data.addRow(0.575968493551035,-0.25432752236672);
        data.addRow(0.582590209910493,-0.237879205264973);
        data.addRow(0.589211926269951,-0.23763149447811);
        data.addRow(0.595833642629409,-0.237781135452983);
        data.addRow(0.602455358988867,-0.238167770573114);
        data.addRow(0.609077075348326,-0.238631042222024);
        data.addRow(0.615698791707784,-0.239010592783236);
        data.addRow(0.622320508067242,-0.243848708586013);
        data.addRow(0.6289422244267,-0.243815286764103);
        data.addRow(0.635563940786158,-0.24343794644353);
        data.addRow(0.642185657145616,-0.242941495148949);
        data.addRow(0.648807373505075,-0.242550740405017);
        data.addRow(0.655429089864533,-0.249344685543116);
        data.addRow(0.662050806223991,-0.25023674479144);
        data.addRow(0.668672522583449,-0.249865315231154);
        data.addRow(0.675294238942907,-0.248191025466365);
        data.addRow(0.681915955302365,-0.245174504101185);
        data.addRow(0.688537671661824,-0.240776379739724);
        data.addRow(0.695159388021282,-0.228326440640938);
        data.addRow(0.70178110438074,-0.228071572468025);
        data.addRow(0.708402820740198,-0.228968666423938);
        data.addRow(0.715024537099656,-0.230393050134011);
        data.addRow(0.721646253459114,-0.231720051223577);
        data.addRow(0.728267969818572,-0.232324997317969);
        data.addRow(0.734889686178031,-0.227906480187427);
        data.addRow(0.741511402537489,-0.227331126961857);
        data.addRow(0.748133118896947,-0.226958441933026);
        data.addRow(0.754754835256405,-0.226432894072057);
        data.addRow(0.761376551615863,-0.22539895235007);
        data.addRow(0.767998267975321,-0.221800446950093);
        data.addRow(0.77461998433478,-0.223055126864335);
        data.addRow(0.781241700694238,-0.223694322347291);
        data.addRow(0.787863417053696,-0.22416185814348);
        data.addRow(0.794485133413154,-0.22490155899742);
        data.addRow(0.801106849772612,-0.226357249653632);
        data.addRow(0.807728566132071,-0.224435408076175);
        data.addRow(0.814350282491529,-0.224435408076175);
        data.addRow(0.820971998850987,-0.224435408076175);
        data.addRow(0.827593715210445,-0.224435408076175);
        data.addRow(0.834215431569903,-0.224435408076175);
        data.addRow(0.840837147929361,-0.224435356946213);
        data.addRow(0.847458864288819,-0.224423780035299);
        data.addRow(0.854080580648277,-0.224363422376953);
        data.addRow(0.860702297007736,-0.224213494903792);
        data.addRow(0.867324013367194,-0.223933208548432);
        data.addRow(0.873945729726652,-0.223481774243491);
        data.addRow(0.88056744608611,-0.225717648341372);
        data.addRow(0.887189162445568,-0.225756832520273);
        data.addRow(0.893810878805027,-0.225599505661229);
        data.addRow(0.900432595164485,-0.225285172782395);
        data.addRow(0.907054311523943,-0.224853338901924);
        data.addRow(0.913676027883401,-0.218799838383146);
        data.addRow(0.920297744242859,-0.218820122370983);
        data.addRow(0.926919460602317,-0.21893498568757);
        data.addRow(0.933541176961776,-0.219227733888613);
        data.addRow(0.940162893321234,-0.21978167252982);
        data.addRow(0.946784609680692,-0.220680107166897);
        data.addRow(0.95340632604015,-0.228284483471701);
        data.addRow(0.960028042399608,-0.231156790626166);
        data.addRow(0.966649758759066,-0.232773117554998);
        data.addRow(0.973271475118524,-0.233593088562647);
        data.addRow(0.979893191477983,-0.234076327953562);        
    }

    @Override
    public void loadValidationData(DatasetTableModel data) {
        data.addRow(0.0, 0.0);
    }

    @Override
    public void loadGeneralizationData(DatasetTableModel data) {
        load(data);
    }
    
    private void load(DatasetTableModel data) {
        for (double x = -1; x < 0.98; x += 0.01) {
            data.addRow(x, 0.0);
        }
    }

    @Override
    public String getFolder() {
        return super.getFolder()
             + File.separator + "mrft"
             + File.separator + "Examples" 
             + File.separator + "EKG" 
             + File.separator;
    }

    @Override
    public String getWeightFile() {
        return "EKG_{epoch}.dat";
    }

    @Override
    public boolean plotTraining() {
        return true;
    }

    @Override
    public int trainingFormat() {
        return MainWindow.PLOT_PATHS;
    }

    @Override
    public boolean plotValidation() {
        return true;
    }

    @Override
    public int validationFormat() {
        return MainWindow.PLOT_POINT;
    }

    @Override
    public boolean plotGeneralization() {
        return true;
    }

    @Override
    public int generalizationFormat() {
        return MainWindow.PLOT_CROSS;
    }
    
}
